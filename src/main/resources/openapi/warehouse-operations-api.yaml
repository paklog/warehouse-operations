openapi: 3.0.3
info:
  title: Warehouse Operations Service API
  description: API for managing warehouse picking, packing, and shipping workflows
  version: 1.0.0
  contact:
    name: Paklog Warehouse Operations Team
    email: warehouse-ops@paklog.com

servers:
  - url: /api/v1/warehouse
    description: Base API endpoint for warehouse operations

tags:
  - name: PickList
    description: Operations for managing pick lists and picking workflows
  - name: Package
    description: Operations for managing package creation and shipping
  - name: Tracking
    description: Operations for tracking warehouse operations

paths:
  /pick-lists:
    post:
      tags:
        - PickList
      summary: Create a new pick list for order fulfillment
      operationId: createPickList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePickListRequest'
      responses:
        '201':
          description: Pick list created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'

  /pick-lists/{pickListId}/confirm-pick:
    post:
      tags:
        - PickList
      summary: Confirm picking of an item from a pick list
      operationId: confirmItemPick
      parameters:
        - name: pickListId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPickRequest'
      responses:
        '200':
          description: Item pick confirmed successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /packages:
    post:
      tags:
        - Package
      summary: Create a new package for shipping
      operationId: createPackage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePackageRequest'
      responses:
        '201':
          description: Package created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'

  /packages/{packageId}/confirm:
    post:
      tags:
        - Package
      summary: Confirm package is ready for shipping
      operationId: confirmPackage
      parameters:
        - name: packageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Package confirmed successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    CreatePickListRequest:
      type: object
      required:
        - orderId
        - items
      properties:
        orderId:
          type: string
          description: Unique identifier for the order
        items:
          type: array
          items:
            $ref: '#/components/schemas/PickListItem'

    PickListItem:
      type: object
      required:
        - skuCode
        - quantity
      properties:
        skuCode:
          type: string
        quantity:
          type: integer
          minimum: 1

    PickListResponse:
      type: object
      properties:
        pickListId:
          type: string
        orderId:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - ASSIGNED
            - IN_PROGRESS
            - COMPLETED

    ConfirmPickRequest:
      type: object
      required:
        - skuCode
        - quantity
        - binLocation
      properties:
        skuCode:
          type: string
        quantity:
          type: integer
          minimum: 1
        binLocation:
          type: string

    CreatePackageRequest:
      type: object
      required:
        - orderId
        - items
      properties:
        orderId:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/PackageItem'

    PackageItem:
      type: object
      required:
        - skuCode
        - quantity
      properties:
        skuCode:
          type: string
        quantity:
          type: integer
          minimum: 1

    PackageResponse:
      type: object
      properties:
        packageId:
          type: string
        orderId:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - CONFIRMED
            - SHIPPED

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: array
          items:
            type: string

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Requested resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'